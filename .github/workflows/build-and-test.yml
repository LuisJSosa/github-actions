name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4 # Check out the repository code

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use the latest available version of Python 3
        check-latest: true # Ensure the latest version is checked and downloaded if necessary

    # Install Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip # Upgrade pip to the latest version
        pip install flake8 pytest # Install flake8 for linting and pytest for testing
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi # Install dependencies from requirements.txt if it exists

    # Lint Python code with flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics # Stop build on syntax errors or undefined names
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics # Treat errors as warnings, set complexity and line length limits

    # Test Python code with pytest
    - name: Test with pytest
      run: |
        pytest # Run tests with pytest

    # Run the Python script
    - name: Run Python script
      run: |
        python hello.py # Execute the hello.py script
        
    # Set PYTHONPATH and run tests with pytest
    - name: Run Python tests
      env:
        PYTHONPATH: .
      run: | 
        pytest
          
    # Set up Java environment
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # Use Eclipse Temurin distribution
        java-version: '17' # Use the latest available version of Java 17
        check-latest: true # Ensure the latest version is checked and downloaded if necessary

    # Compile the Java program
    - name: Compile Java program
      run: |
        javac hellojava.java # Compile hellojava.java file

    # Run the Java program
    - name: Run Java program
      run: |
        java HelloWorld # Execute the compiled HelloWorld class
